aliases:
  - &restore-node-cache
    keys:
      - v1-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
      # Fallback in case checksum fails
      - v1-dependencies-{{ arch }}-{{ .Branch }}-

  - &save-node-cache
    paths:
      - node_modules
    key: v1-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

  - &restore-cache-website
    keys:
      - v1-website-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "website/package.json" }}
      # Fallback in case checksum fails
      - v1-website-dependencies-{{ arch }}-{{ .Branch }}-

  - &save-cache-website
    paths:
      - website/node_modules
    key: v1-website-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "website/package.json" }}

  - &restore-cache-analysis
    keys:
      - v1-analysis-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}{{ checksum "danger/package.json" }}
      # Fallback in case checksum fails
      - v1-analysis-dependencies-{{ arch }}-{{ .Branch }}-
  - &save-cache-analysis
    paths:
      - danger/node_modules
      - node_modules
    key: v1-analysis-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}{{ checksum "danger/package.json" }}

  - &restore-cache-android-packages
    keys:
      - v1-android-sdkmanager-packages-{{ arch }}-{{ checksum "scripts/circle-ci-android-setup.sh" }}
      # Fallback in case checksum fails
      - v1-android-sdkmanager-packages-{{ arch }}-
  - &save-cache-android-packages
    paths:
      - /opt/android/sdk/system-images/android-23
      - /opt/android/sdk/system-images/android-19
      - /opt/android/sdk/platforms/android-26
      - /opt/android/sdk/platforms/android-23
      - /opt/android/sdk/platforms/android-19
      - /opt/android/sdk/build-tools/23.0.1
      - /opt/android/sdk/add-ons/addon-google_apis-google-23
    key: v1-android-sdkmanager-packages-{{ arch }}-{{ checksum "scripts/circle-ci-android-setup.sh" }}

  - &restore-cache-ndk
    keys:
      - v1-android-ndk-{{ arch }}-r10e-32-64

  - &save-cache-ndk
    paths:
      - /opt/ndk
    key: v1-android-ndk-{{ arch }}-r10e-32-64

  - &restore-cache-buck-downloads
    keys:
      - v1-buck-downloads-{{ arch }}-{{ .Branch }}-{{ checksum "node_modules/react-native/ReactAndroid/build.gradle" }}
      # Fallback in case checksum fails
      - v1-buck-downloads-{{ arch }}-{{ .Branch }}-
  - &save-cache-buck-downloads
    paths:
     - "node_modules/react-native/ReactAndroid/build/downloads"
    key: v1-buck-downloads-{{ arch }}-{{ .Branch }}-{{ checksum "node_modules/react-native/ReactAndroid/build.gradle" }}

  - &restore-cache-buck
    keys:
      - v1-buck-{{ arch }}-v2017.09.04.02
  - &save-cache-buck
    paths:
      - ~/buck
    key: v1-buck-{{ arch }}-v2017.09.04.02

  - &restore-cache-watchman
    keys:
      - v1-watchman-{{ arch }}-v4.9.0
  - &save-cache-watchman
    paths:
      - ~/watchman
    key: v1-watchman-{{ arch }}-v4.9.0

  - &install-node-dependencies
    |
      npm install --no-package-lock --no-spin --no-progress

  - &run-node-tests
    |
      npm test -- --maxWorkers=2
      npm run lint
      npm run flow -- check

  - &filter-only-master-stable
    branches:
      only:
        - /.*-stable/
        - master

  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages

  - &filter-ignore-master-stable
    branches:
      ignore:
        - master
        - /.*-stable/
        - gh-pages

defaults: &defaults
  working_directory: ~/react-native

version: 2
jobs:
  deploy-ios :
      <<: *defaults
      docker:
        - image: circleci/node:8
      steps:
          - checkout
          - restore-cache: *restore-node-cache
          - run: *install-node-dependencies
          - save-cache: *save-node-cache
          - run: curl -F "file=@deploy/testci.ipa" -F "token=efdcced65c4f355b0d27eeb30fc671f570e39806" -F "message=sample" https://deploygate.com/api/users/Vinhhp193042/apps
  build-js-bundle:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore-cache: *restore-node-cache
      - run: *install-node-dependencies
      - save-cache: *save-node-cache
      - run:
          name: Build JavaScript Bundle
          command: node node_modules/react-native/local-cli/cli.js bundle --max-workers 2 --platform android --dev true --entry-file node_modules/react-native/ReactAndroid/src/androidTest/js/TestBundle.js --bundle-output node_modules/react-native/ReactAndroid/src/androidTest/assets/AndroidTestBundle.js
      - persist_to_workspace:
          root: node_modules/react-native/ReactAndroid/src/androidTest/assets/
          paths:
            - AndroidTestBundle.js
      - store_artifacts:
          path: node_modules/react-native/ReactAndroid/src/androidTest/assets/AndroidTestBundle.js
  test-android:
    <<: *defaults
    docker:
      - image: circleci/android:api-26-alpha
    environment:
      - TERM: "dumb"
      - ADB_INSTALL_TIMEOUT: 10
      - GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx512m -XX:+HeapDumpOnOutOfMemoryError"'
      - ANDROID_NDK: '/opt/ndk/android-ndk-r10e'
      - BUILD_THREADS: 2
    steps:
      - checkout
      - run:
          name: Configure PATH
          command: |
            echo 'export PATH=${ANDROID_NDK}:~/react-native/gradle-2.9/bin:~/buck/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install Build Dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get install ant autoconf automake g++ gcc libqt5widgets5 lib32z1 lib32stdc++6  make maven python-dev python3-dev qml-module-qtquick-controls qtdeclarative5-dev -y
      - restore-cache: *restore-cache-android-packages
      - run:
          name: Install Android Packages
          command: source scripts/circle-ci-android-setup.sh && getAndroidSDK
      - save-cache: *save-cache-android-packages
      - run:
          name: Create Android Virtual Device
          command: source scripts/circle-ci-android-setup.sh && createAVD
      - run:
          name: Launch Android Virtual Device in Background
          command: source scripts/circle-ci-android-setup.sh && launchAVD
          background: true
      - run:
          name: Create Android NDK Directory
          command: |
            if [[ ! -e /opt/ndk ]]; then
              sudo mkdir /opt/ndk
            fi
            sudo chown ${USER:=$(/usr/bin/id -run)}:$USER /opt/ndk
      - restore-cache: *restore-cache-ndk
      - run:
          name: Install Android NDK
          command: source scripts/circle-ci-android-setup.sh && getAndroidNDK
      - save-cache: *save-cache-ndk
      - restore-cache: *restore-cache-buck
      - run:
          name: Install Buck
          command: |
            if [[ ! -e ~/buck ]]; then
              git clone https://github.com/facebook/buck.git ~/buck --branch v2017.09.04.02 --depth=1
            fi
            cd ~/buck && ant
            buck --version
      - save-cache: *save-cache-buck
      - run:
          name: Install Node
          command: |
            curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
            sudo apt-get install -y nodejs
      - restore-cache: *restore-node-cache
      - run: *install-node-dependencies
      - save-cache: *save-node-cache
      - attach_workspace:
          at: node_modules/react-native/ReactAndroid/src/androidTest/assets/
      - run:
          name: Check for JavaScript Bundle
          command: |
            if [[ ! -e node_modules/react-native/ReactAndroid/src/androidTest/assets/AndroidTestBundle.js ]]; then
              echo "JavaScript bundle missing, verify build-js-bundle step"; exit 1;
            else
              echo "JavaScript bundle found.";
            fi
      - run:
          name: Build and Install Test APK
#          command: source scripts/circle-ci-android-setup.sh && NO_BUCKD=1 retry3 buck install node_modules/react-native/ReactAndroid/src/androidTest/buck-runner:instrumentation-tests --config build.threads=$BUILD_THREADS
          command : |
                 cd android &&
                 ./gradlew assembleRelease &&
                 curl -F "file=@app/build/outputs/apk/app-release.apk" -F "token=efdcced65c4f355b0d27eeb30fc671f570e39806" -F "message=sample" https://deploygate.com/api/users/Vinhhp193042/apps
      - store_artifacts:
           path: ./android/app/build/outputs/apk


# Workflows enables us to run multiple jobs in parallel
workflows:
    version: 2
    test_android:
        jobs:
            - build-js-bundle:
                filters: *filter-ignore-gh-pages
            - test-android:
                requires:
                    - build-js-bundle

    test_ios:
        jobs:
            - hold:
                type: approval
            - deploy-ios:
                requires:
                    - hold
